const readdir=require("fs").readdir,settings=require("../../../settings.json"),messages=require("../get/messages").execute().mainFunction(),isModuleInstalled=require("../isModuleInstalled").execute;let cConsole=console;require("../../functions/isModuleInstalled").execute("console")&&(cConsole={clear:require(`../../.${settings.generic.path.files.modules}console/functions/clear`).execute,log:require(`../../.${settings.generic.path.files.modules}console/functions/log`).execute,warn:require(`../../.${settings.generic.path.files.modules}console/functions/warn`).execute}),module.exports={execute(){cConsole.clear(),readdir(settings.generic.path.files.errors,((e,s)=>{try{if(e)throw e;let r=[];if(s.forEach((e=>{e!=settings.generic.path.files.noError&&r.push(e)})),r[0]){cConsole.clear();let e=messages.error.thereAreErrors.replace("{amount}",r.length);if(1==r.length&&(e=messages.error.thereIsError.replace("{amount}",r.length)),cConsole.warn(e),cConsole.log(),isModuleInstalled("text")){let e=[];r.forEach((s=>{if(s.endsWith(".json")){let r=require(`../../../${settings.generic.path.files.errors}${s}`).occurrences.length;e.push([`${settings.generic.path.files.errors}${s}`,r])}else e.push([`${settings.generic.path.files.errors}${s}`,-1])})),require(`../../../${settings.generic.path.files.modules}text/createDiagram.js`).twoColumns(e,4," ").forEach((e=>{cConsole.warn(e)}))}else r.forEach((e=>{let s=require(`../../../${settings.generic.path.files.errors}${e}`).occurrences.length;cConsole.warn(`${settings.generic.path.files.errors}${e}\t\t${s}`)}));cConsole.log(),cConsole.warn(e)}}catch(e){require("./lastFallback").execute(e)}}))}};
