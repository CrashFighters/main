const fs=require("fs"),settings=require("../../../settings.json");let gMessages;try{gMessages=require("../get/messages").execute().mainFunction()}catch{gMessages=void 0}let extremeErrorMode=!1,reloadMode=0,cConsole=console;require("../../functions/isModuleInstalled").execute("console")&&(cConsole={clear:require(`../../.${settings.generic.path.files.modules}console/functions/clear`).execute,log:require(`../../.${settings.generic.path.files.modules}console/functions/log`).execute,warn:require(`../../.${settings.generic.path.files.modules}console/functions/warn`).execute});let amountError=0,lastError="",lastErrorTime=0;function asyncTimeout(e){return new Promise((r=>setTimeout(r,e)))}async function countDown(e,r,t){let o=e;for(;o>0;)t(o),o--,await asyncTimeout(r);t(0)}module.exports={execute(e,r){if(r)try{require("./statusCode").execute(r,500)}catch{}let t=(new Date).getTime()-lastErrorTime;t>1e3&&(amountError=0);let o=!0,s=`${e}`.split("\n")[0];s==lastError&&t<1e3?amountError+=1:(lastError=s,amountError=1);let n=e.stack;n||(n=new Error("No error stack given").stack.split("\n").splice(1).join("\n"));let a=`${`${e}`.split("\n")[0]}\n\n\nStack${e.stack?"":" (No stack given)"}:\n${n}`;fs.writeFileSync(`${settings.generic.path.files.errors}RAW1-${amountError}-${Math.floor(1e3*Math.random())}.txt`,a),amountError>5&&t<1e3&&(o=!1),cConsole.clear(),o?(reloadMode++,countDown(5,1e3,(e=>{cConsole.clear(),cConsole.log(`Retrying in ${e} seconds...`)})),setTimeout((()=>{reloadMode--,lastErrorTime=(new Date).getTime();try{require("./evalErrors").execute()}catch{}}),5e3)):(cConsole.log("No retry, because of looping error"),extremeErrorMode=!0)},extremeServer(e,r){r.writeHead(500,"The server has an extreme error, please try again later"),r.end("The server has an extreme error, please try again later"),cConsole.warn("New request in extreme error mode")},reloadServer(e,r){let t;try{t=require("../get/messages").execute({request:e}).mainFunction()}catch{t=gMessages}let o=settings.generic.path.files.reloadingFile.replace("{files}",settings.generic.path.files.files);r.writeHead(500,"Because of an extreme error, the server is reloading in 5 seconds");try{let e=Buffer.from(fs.readFileSync(o).toString("utf-8").replace("|reloadText|",t?t.error.clientServerReload:""));r.end(e)}catch(e){r.end("Because of an extreme error, the server is reloading in 5 seconds")}},serverExecute(e,r){if(extremeErrorMode){require(__filename).extremeServer(e,r)}else if(reloadMode>0){require(__filename).reloadServer(e,r)}else try{require("../../server/main").execute(e,r)}catch(e){e.stack,require(__filename).execute(e,r)}}};
