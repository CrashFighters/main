const fs=require("fs"),{readdirSync:readdirSync,existsSync:existsSync,statSync:statSync}=fs,isModuleInstalled=require("../../functions/isModuleInstalled").execute,parseErrorRaw=require("../../functions/error/parseErrorRaw").execute,evalErrors=require("../../functions/error/evalErrors").execute,messages=require("../../functions/get/messages").execute().mainFunction(),generic=require("../../../settings.json").generic;let api={};function addApiCalls(e,r){existsSync(r)&&readdirSync(r).forEach((s=>{if(statSync(`${r}${s}`).isDirectory())addApiCalls(`${e}${s}/`,`${r}${s}/`);else{let i=require(`../../../${r}${s}`);s=s.split(".js")[0];let a=!0,l=[];if(i.dependencies&&i.dependencies.modules&&i.dependencies.modules.forEach((e=>{existsSync(`${generic.path.files.modules}${e}/`)||(a=!1,l.push(e))})),api[`${e}${s}`]={file:require(`../../../${r}${s}`),enabled:{dependencies:{installed:a,dependenciesNotInstalled:l}}},!a){if(isModuleInstalled("text")){let r=require(`../../../${generic.path.files.modules}text/createList.js`).createList(l);parseErrorRaw(new Error(messages.error.moduleNotInstalledForShort.replace("{api}",`${e}${s}`)),messages.error.modulesNotInstalledFor.replace("{api}",`${e}${s}`).replace("{dependencie}",r))}else parseErrorRaw(new Error(messages.error.moduleNotInstalledForShort.replace("{api}",`${e}${s}`)),messages.error.moduleNotInstalledFor.replace("{api}",`${e}${s}`).replace("{dependencie}",l[0]));evalErrors()}}}))}addApiCalls("/",generic.path.files.api),readdirSync(generic.path.files.modules).forEach((e=>{addApiCalls("/",generic.path.files.moduleApi.replace("{modules}",generic.path.files.modules).replace("{name}",e))})),module.exports={execute:()=>api};
