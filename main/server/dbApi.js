const{get:get,set:set}=require("../../modules/database/functions/database.js"),parseErrorOnline=require("../functions/error/parseErrorOnline.js").execute,addPostToQueue=require("../../modules/perspective/functions/addPostToQueue.js"),statusCode=(e,t,{text:o,short:s})=>{e.writeHead(t,{"Content-Type":"application/json"}),e.end(JSON.stringify({successful:`${t}`.startsWith("2"),code:t,text:o,short:s}))};function doApiCall({db:e,set:t,path:o,params:s,method:i,require:n,end:r,statusCode:m,userId:c}){if("/"===o){if("GET"!==i)return void m(405,{text:"Method not allowed",short:"invalidMethod"});r(Object.keys(e.communities??{}))}else if("/community"===o){if("GET"===i){if(!n({name:"community",type:"communityId"},{},["correctType","hasGetPermission"]))return;r({...e.communities[s.community],posts:Object.keys(e.communities[s.community]?.posts??{})})}else if("DELETE"===i){if(!n({name:"community",type:"communityId"},{},["correctType","hasDeletePermission"]))return;delete e.communities[s.community],t(),m(204,{text:"Community deleted",short:"deleted"})}else if("PUT"===i){if(!n({name:"community",type:"communityId"},{},["correctType","hasModifyPermission"]))return;if(!n({name:"properties",type:"object"},{},["correctType"]))return;let o=!1;for(const t of Object.keys(s.properties))if("name"===t){if(!n({value:s.properties[t],type:"communityName"},{},["correctType"]))return;e.communities[s.community].name=s.name,o=!0}o&&t(),n({name:"community",type:"communityId"},{},["hasGetPermission"],!0)?r({...e.communities[s.community],posts:Object.keys(e.communities[s.community]?.posts??{})}):r(null)}else if("POST"===i){if(!n({type:"communityId"},{},["hasCreatePermission"]))return;if(!n({name:"name",type:"communityName"},{},["correctType"]))return;let o;for(e.communities||(e.communities={});!o||e.communities[o];)o=Math.random().toString(36).substr(2,9);e.communities[o]={posts:{},id:o,name:s.name,owner:c},t(),r(o)}}else if("/post"===o){if("GET"===i){if(!n({name:"community",type:"communityId"},{},["correctType"]))return;if(!n({name:"post",type:"postId"},{community:s.community},["correctType","hasGetPermission"]))return;r({...e.communities[s.community].posts[s.post],votes:Object.keys(e.communities[s.community].posts[s.post]?.votes??{})})}else if("DELETE"===i){if(!n({name:"community",type:"communityId"},{},["correctType"]))return;if(!n({name:"post",type:"postId"},{community:s.community},["correctType","hasDeletePermission"]))return;delete e.communities[s.community].posts[s.post],t(),m(204,{text:"Post deleted",short:"deleted"})}else if("PUT"===i){if(!n({name:"community",type:"communityId"},{},["correctType"]))return;if(!n({name:"post",type:"postId"},{community:s.community},["correctType","hasModifyPermission"]))return;if(!n({name:"properties",type:"object"},{},["correctType"]))return;let o=!1;for(const t of Object.keys(s.properties))if("message"===t){if(!n({value:s.properties[t],type:"postMessage"},{community:s.community},["correctType"]))return;e.communities[s.community].posts[s.post].message=s.message,o=!0}o&&t(),n({name:"post",type:"postId"},{community:s.community},["hasGetPermission"],!0)?r({...e.communities[s.community].posts[s.post],votes:Object.keys(e.communities[s.community].posts[s.post]?.votes??{})}):r(null)}else if("POST"===i){if(!n({name:"community",type:"communityId"},{},["correctType"]))return;if(!n({type:"postId"},{community:s.community},["hasCreatePermission"]))return;if(!n({name:"message",type:"postMessage"},{community:s.community},["correctType"]))return;e.communities[s.community].posts||(e.communities[s.community].posts={});const o=e.communities[s.community].posts;let i;for(;!i||o[i];)i=Math.random().toString(36).substr(2,9);o[i]={votes:{},id:i,message:s.message,user:c,perspective:null},addPostToQueue({community:s.community,post:i}),t(),r(i)}}else{if("/vote"!==o)return void m(404,{text:"Endpoint not found",short:"endpointNotFound"});if("GET"===i){if(!n({name:"community",type:"communityId"},{},["correctType"]))return;if(!n({name:"post",type:"postId"},{community:s.community},["correctType"]))return;if(!n({name:"vote",type:"voteId"},{community:s.community,post:s.post},["correctType","hasGetPermission"]))return;r(e.communities[s.community].posts[s.post].votes[s.vote])}else if("DELETE"===i){if(!n({name:"community",type:"communityId"},{},["correctType"]))return;if(!n({name:"post",type:"postId"},{community:s.community},["correctType"]))return;if(!n({name:"vote",type:"voteId"},{community:s.community,post:s.post},["correctType","hasDeletePermission"]))return;delete e.communities[s.community].posts[s.post].votes[s.vote],t(),m(204,{text:"Post deleted",short:"deleted"})}else if("PUT"===i){if(!n({name:"community",type:"communityId"},{},["correctType"]))return;if(!n({name:"post",type:"postId"},{community:s.community},["correctType"]))return;if(!n({name:"vote",type:"voteId"},{community:s.community,post:s.post},["correctType","hasModifyPermission"]))return;if(!n({name:"properties",type:"object"},{},["correctType"]))return;let o=!1;for(const t of Object.keys(s.properties))if("isUpVote"===t){if(!n({value:s.properties[t],type:"boolean"},{community:s.community,post:s.post,vote:s.vote},["correctType"]))return;e.communities[s.community].posts[s.post].votes[s.vote]=s.isUpVote,o=!0}o&&t(),n({name:"vote",type:"voteId"},{community:s.community,post:s.post},["hasGetPermission"],!0)?r(e.communities[s.community].posts[s.post].votes[c]):r(null)}else if("POST"===i){if(!n({name:"community",type:"communityId"},{},["correctType"]))return;if(!n({name:"post",type:"postId"},{community:s.community},["correctType"]))return;if(!n({name:"vote",type:"voteId"},{community:s.community,post:s.post},["hasCreatePermission"]))return;if(!n({name:"isUpVote",type:"boolean"},{community:s.community,post:s.post},["correctType"]))return;e.communities[s.community].posts[s.post].votes||(e.communities[s.community].posts[s.post].votes={});const o=e.communities[s.community].posts[s.post].votes;if(o[c])return void m(400,{text:"You have already voted",short:"voted"});o[c]={user:c,isUpVote:s.isUpVote},t(),r(c)}}}module.exports={async execute(e,t,{middlewareData:o}){try{const{path:s,params:i,success:n}=require("../functions/parse/dbApiCall.js").execute(e),{authentication:r,permissions:{database:m}}=o;if(!n)return void statusCode(t,400,{text:"Invalid request",short:"invalidRequest"});const c=await get();doApiCall({db:c,set:()=>set(c),path:s,params:i,method:e.method,userId:r?.uid,end:e=>{t.writeHead(200,{"Content-Type":"application/json"}),t.end(JSON.stringify(e))},statusCode:(e,{text:o,short:s})=>statusCode(t,e,{text:o,short:s}),require:({name:e,value:o,type:s},{community:n,post:u},a,p)=>{const y=e?i[e]:o;if(a.includes("correctType")&&!y)return p||statusCode(t,400,{text:`Missing parameter ${e}`,short:"missingParameter"}),!1;if("communityId"===s){const e=c.communities?.[y];if(a.includes("correctType")&&!e)return p||statusCode(t,404,{text:`No community found with id ${y}`,short:"communityNotFound"}),!1;if(a.includes("hasGetPermission")||a.includes("hasDeletePermission")||a.includes("hasModifyPermission")||a.includes("hasCreatePermission")){const o=Object.entries({hasGetPermission:"get",hasDeletePermission:"delete",hasModifyPermission:"modify",hasCreatePermission:"create"}).find((([e])=>a.includes(e)))[1];if(!o)throw new Error("checkPermissionType is undefined");let s;if("always"===m[o].community)s=!0;else if("ifOwner"===m[o].community)s=e.owner===r.uid;else{if("never"!==m[o].community)throw new Error(`Don't know what to do with permissions.database.${o}.community ${m[o].community}`);s=!1}if(!s)return p||statusCode(t,403,{text:`Invalid permission to ${o} community ${y}`,short:"invalidPermission"}),!1}}else if("postId"===s){if(!n)throw new Error("Can't get post without community");const e=c.communities?.[n]?.posts?.[y];if(a.includes("correctType")&&!e)return p||statusCode(t,404,{text:`No post found with id ${y} in community ${n}`,short:"postNotFound"}),!1;if(a.includes("hasGetPermission")||a.includes("hasDeletePermission")||a.includes("hasModifyPermission")||a.includes("hasCreatePermission")){const o=Object.entries({hasGetPermission:"get",hasDeletePermission:"delete",hasModifyPermission:"modify",hasCreatePermission:"create"}).find((([e])=>a.includes(e)))[1];if(!o)throw new Error("checkPermissionType is undefined");let s;if("always"===m[o].post)s=!0;else if("ifOwner"===m[o].post)s=e.user===r.uid;else{if("never"!==m[o].post)throw new Error(`Don't know what to do with permissions.database.${o}.post ${m[o].post}`);s=!1}if(!s)return p||statusCode(t,403,{text:`Invalid permission to ${o} post ${y} in community ${n}`,short:"invalidPermission"}),!1}}else if("voteId"===s){if(!n)throw new Error("Can't get vote without community");if(!u)throw new Error("Can't get vote without post");const e=c.communities?.[n].posts?.[u]?.votes?.[y];if(a.includes("correctType")&&!e)return p||statusCode(t,404,{text:`No vote found with index ${y} in post ${u} in community ${n}`,short:"voteNotFound"}),!1;if(a.includes("hasGetPermission")||a.includes("hasDeletePermission")||a.includes("hasModifyPermission")||a.includes("hasCreatePermission")){const o=Object.entries({hasGetPermission:"get",hasDeletePermission:"delete",hasModifyPermission:"modify",hasCreatePermission:"create"}).find((([e])=>a.includes(e)))[1];if(!o)throw new Error("checkPermissionType is undefined");let s;if("always"===m[o].vote)s=!0;else if("ifOwner"===m[o].vote)s=e.user===r.uid;else{if("never"!==m[o].vote)throw new Error(`Don't know what to do with permissions.database.${o}.vote ${m[o].vote}`);s=!1}if(!s)return p||statusCode(t,403,{text:`Invalid permission to ${o} vote ${y} in post ${u} in community ${n}`,short:"invalidPermission"}),!1}}else if("communityName"===s){if(a.includes("correctType")){if(!(y.length>2&&y.length<=20&&y.match(/^[a-zA-Z0-9_\- ]+$/)))return p||statusCode(t,400,{text:"Invalid community name",short:"invalidCommunityName"}),!1}}else if("postMessage"===s){if(a.includes("correctType")){if(!(y.length>10&&y.length<=500))return p||statusCode(t,400,{text:"Invalid post message",short:"invalidPostMessage"}),!1}}else if("boolean"===s){if(a.includes("correctType")&&"boolean"!=typeof y)return p||statusCode(t,400,{text:`Parameter ${e} must be a boolean`,short:"invalidParameter"}),!1}else{if("object"!==s)throw new Error(`Unknown type ${s}`);if(a.includes("correctType")&&("object"!=typeof y||Array.isArray(y)||null===y))return p||statusCode(t,400,{text:`Parameter ${e} must be an object`,short:"invalidParameter"}),!1}return!0}})}catch(e){parseErrorOnline(e,t,s)}var s}};
