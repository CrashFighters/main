const signUpButton=document.getElementById("signUp"),signInButton=document.getElementById("signIn"),container=document.getElementById("container"),signUpButton_mobile=document.getElementById("signUp_mobile"),signInButton_mobile=document.getElementById("signIn_mobile"),alertScript=document.createElement("script");function coolAlert(e){Swal.fire({backdrop:!0,icon:"warning",title:getMessage("ErrorDialogueTitle"),text:e,confirmButtonText:getMessage("ErrorDialogueConfirm"),confirmButtonColor:"#000"})}alertScript.src="https://cdn.jsdelivr.net/npm/sweetalert2@11",document.head.appendChild(alertScript),signUpButton.addEventListener("click",(()=>{container.classList.add("right-panel-active")})),signInButton.addEventListener("click",(()=>{container.classList.remove("right-panel-active")})),signUpButton_mobile.addEventListener("click",(()=>{container.classList.add("right-panel-active")})),signInButton_mobile.addEventListener("click",(()=>{container.classList.remove("right-panel-active")}));import{setDisplayName}from"/js/settings.js";import{loginWithEmail,loginWithGithub,createEmailAccount,prepare2fa,get2faMethods,send2fa,loginWith2fa}from"/js/login.js";import{getMessage}from"/sdk/language.js";import{onStateChange}from"/sdk/auth.js";import{createButton}from"/sdk/recaptcha.js";import{deepQuerySelectorAll}from"/common/deepQuerySelectorAll.js";import{minimalLoginRecaptchaScore,minimalSignupRecaptchaScore}from"/common/settings.js";const urlParams=new URLSearchParams(window.location.search),signup="true"===urlParams.get("signup");signup&&document.getElementById("container").classList.add("right-panel-active"),urlParams.get("redirect")&&(document.getElementById("forgotPassword").href+=`?redirect=${encodeURIComponent(urlParams.get("redirect"))}`);let preventRedirect=!1;onStateChange((e=>{e&&!preventRedirect&&redirect()}));const githubLoginButtons=[...deepQuerySelectorAll(".githubLoginButton")];for(const e of githubLoginButtons)e.addEventListener("click",(async()=>{try{await loginWithGithub()}catch(e){if(!["auth/popup-closed-by-user","auth/cancelled-popup-request","auth/user-cancelled"].includes(e.code)){const t=firebaseErrorCodes[e.code];return handleSignupError({errorCode:t?.errorCode,field:t?.field,error:e})}}}));const firebaseErrorCodes={"auth/user-not-found":{errorCode:"emailDoesNotExist",field:"email"},"auth/missing-email":{errorCode:"missingEmail",field:"email"},"auth/invalid-email":{errorCode:"invalidEmail",field:"email"},"auth/email-already-in-use":{errorCode:"emailAlreadyInUse",field:"email"},"auth/wrong-password":{errorCode:"wrongPassword",field:"password"},"auth/weak-password":{errorCode:"weakPassword",field:"password"},"auth/invalid-verification-code":{errorCode:"invalidVerificationCode",field:"verificationCode"},"auth/missing-code":{errorCode:"missingVerificationCode",field:"verificationCode"},"auth/too-many-requests":{errorCode:"tooManyRequests"},"auth/multi-factor-auth-required":{errorCode:"2faRequired"},"auth/internal-error":{errorCode:"firebaseAuthInternalError"},"auth/popup-closed-by-user":{errorCode:"popupClosedByUser"},"auth/cancelled-popup-request":{errorCode:"popupCancelled"},"auth/user-cancelled":{errorCode:"userCancelled"}},recaptchaStateNames={ready:"recaptchaNotSolved",expired:"recaptchaExpired",error:"recaptchaError"};let cachedErrorCodeMessages;async function getErrorCodeMessages(){return cachedErrorCodeMessages||(cachedErrorCodeMessages=await fetch("/api/messages"),cachedErrorCodeMessages=await cachedErrorCodeMessages.json(),cachedErrorCodeMessages=cachedErrorCodeMessages.pages["/login"].error,cachedErrorCodeMessages)}const loginFields=["email","password","recaptcha","verificationCode","2fa-recaptcha"];async function handleLoginError({errorCode:e,field:t,error:r}){const o=(await getErrorCodeMessages())[e]??e??(r?.message?`${getMessage("Error")}: ${r.message}`:getMessage("UnknownErrorOccurred"));if(!t)return coolAlert(o);if(!loginFields.includes(t))throw new Error(`Invalid field: ${t}`);for(const e of loginFields){const r=document.getElementById(`login-${e}-feedback`);r.innerText=e===t?o:""}}function choose2faMethod(e){const t=document.getElementById("choose2faMethodText"),r=document.getElementById("choose2faMethod");return new Promise((o=>{for(const n in e){const{displayName:a,phoneNumber:i}=e[n],s=document.createElement("button");s.innerText=a?`${a} (${i})`:i,s.addEventListener("click",(()=>{t.style.display="none",r.style.display="none",o(n)})),r.appendChild(s)}t.style.display=null,r.style.display=null}))}function wait2faRecaptchaSuccess(e){return new Promise((t=>{e.onStateChange((()=>{["success","successBefore"].includes(e.state)&&t()}))}))}let _2faError,loginRecaptcha;async function enable2fa(e){_2faError=e;const t=document.getElementById("_2faRecaptchaContainer"),r=document.getElementById("loginButton-1"),o=document.getElementById("signupRecaptchaButton"),n=document.getElementById("forgotPassword"),a=document.getElementById("loginRecaptchaButton"),i=document.getElementById("loginPassword"),s=document.getElementById("loginEmail"),d=document.getElementById("verificationCodeInput"),c=document.getElementById("verify2faButton"),l=document.getElementById("2faVerificationCodeStatus");t.style.display=null,r.style.display="none",o.style.display="none",n.style.display="none",a.style.display="none",i.disabled=!0,s.disabled=!0;const u=await prepare2fa(),g=await get2faMethods(e);let m;i.style.display="none",m=1===g.length?0:await choose2faMethod(g),["success","successBefore"].includes(u.state)||await wait2faRecaptchaSuccess(u),t.style.display="none",d.style.cursor="wait",d.disabled=!0,d.style.display=null,c.disabled=!0,c.style.display=null,l.innerText=getMessage("SendingVerificationCode"),l.style.display=null;const{phoneNumber:p,displayName:f}=await send2fa(m);l.innerText=`${getMessage("VerificationCodeSentTo")} {location}`.replace("{location}",f?`${f} (${p})`:p),c.addEventListener("click",(()=>c.disabled=!0)),c.disabled=!1,d.disabled=!1,d.style.cursor=null}window.removeLoginErrorFeedback=()=>{for(const e of loginFields){document.getElementById(`login-${e}-feedback`).innerText=""}},window.verify2fa=async()=>{if(!_2faError)throw new Error("No 2FA error found");const e=document.getElementById("verify2faButton"),t=document.getElementById("verificationCodeInput").value;try{await loginWith2fa(t)}catch(e){const t=firebaseErrorCodes[e.code];return handleLoginError({errorCode:t?.errorCode,field:t?.field,error:e})}finally{e.disabled=!1}},window.doLogin=async e=>{const t=document.getElementById("loginEmail").value,r=document.getElementById("loginPassword").value,o=document.getElementById("loginButton-1");if(e<minimalLoginRecaptchaScore&&!loginRecaptcha&&(loginRecaptcha=await createButton(document.getElementById("loginRecaptchaButton"))),loginRecaptcha&&"success"!==loginRecaptcha.state)return handleLoginError({errorCode:recaptchaStateNames[loginRecaptcha.state],field:"recaptcha"});o.disabled=!0,preventRedirect=!0;try{window.removeLoginErrorFeedback(),await loginWithEmail(t,r)}catch(e){if("auth/multi-factor-auth-required"===e.code)return enable2fa(e);const t=firebaseErrorCodes[e.code];return handleLoginError({errorCode:t?.errorCode,field:t?.field,error:e})}finally{o.disabled=!1,preventRedirect=!1}redirect()};const signupFields=["name","email","password","recaptcha"];async function handleSignupError({errorCode:e,field:t,error:r}){const o=(await getErrorCodeMessages())[e]??e??(r?.message?`${getMessage("Error")}: ${r.message}`:getMessage("UnknownErrorOccurred"));if(!t)return coolAlert(o);if(!signupFields.includes(t))throw new Error(`Invalid field: ${t}`);for(const e of signupFields){const r=document.getElementById(`signup-${e}-feedback`);r.innerText=e===t?o:""}}let signupRecaptcha;function redirect(){const e=urlParams.get("redirect");null!==e&&new URL(e).origin!==window.location.origin?Swal.fire({title:getMessage("RedirectQuestionTitle"),text:e,showCancelButton:!0,confirmButtonColor:"#000",cancelButtonColor:"#d33",cancelButtonText:"Nope!",confirmButtonText:"Yep!"}).then((t=>{t.isConfirmed?window.open(e,"_self"):window.open("/","_self")})):e?window.open(e,"_self"):window.open("/","_self")}window.removeSignupErrorFeedback=()=>{for(const e of signupFields){document.getElementById(`signup-${e}-feedback`).innerText=""}},window.doSignup=async e=>{const t=document.getElementById("signupName").value,r=document.getElementById("signupEmail").value,o=document.getElementById("signupPassword").value,n=document.getElementById("signupButton-1");if(0===t.length)return handleSignupError({errorCode:"noName",field:"name"});if(e<minimalSignupRecaptchaScore&&!signupRecaptcha&&(signupRecaptcha=await createButton(document.getElementById("signupRecaptchaButton"))),signupRecaptcha&&"success"!==signupRecaptcha.state)return handleSignupError({errorCode:recaptchaStateNames[loginRecaptcha.state],field:"recaptcha"});n.disabled=!0,preventRedirect=!0;try{await createEmailAccount(r,o),await setDisplayName(t)}catch(e){const t=firebaseErrorCodes[e.code];return handleSignupError({errorCode:t?.errorCode,field:t?.field,error:e})}finally{n.disabled=!1,preventRedirect=!1}redirect()};
