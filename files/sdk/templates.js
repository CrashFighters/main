import{onStateChange}from"/sdk/auth.js";const scriptOnPage=document.querySelector("script[data-template_debug]"),debug=null!==scriptOnPage;debug&&console.log("[templateSDK] Dᴇʙᴜɢ Mᴏᴅᴇ Aᴄᴛɪᴠᴇ");const getTemplateValues=e=>({email:e?.email??"",displayName:e?.displayName??"",picture:e?.picture??"",loggedOut:null!==e,loggedIn:null===e});function replaceTemplates(e){const t=getTemplateValues(e),a=deepQuerySelectorAll("[data-template]");for(const e of a){const a=e.dataset.template;if(!(a in t)&&debug){console.error(new Error(`[templateSDK] Template ${a} not found.`));continue}let l=t[a];void 0!==e.dataset.template_update_callback&&(debug&&console.log(`[templateSDK] Running callback function ${e.dataset.template_update_callback} on template ${a} with value ${l}.`),window[e.dataset.template_update_callback](a,l)),""===t[a]&&void 0!==e.dataset.template_fallback&&(debug&&console.log(`[templateSDK] Using fallback value ${e.dataset.template_fallback} on template ${a}.`),l=e.dataset.template_fallback),void 0===e.dataset.template_insert||"innerText"===e.dataset.template_insert?(debug&&console.log(`[templateSDK] Replacing template ${a} with value ${l}.`),e.innerText=l):(debug&&(console.log(`[templateSDK] Replacing template ${a} with value ${l}.`),console.log(`[templateSDK] Using custom insert method ${e.dataset.template_insert}.`)),e[e.dataset.template_insert]=l)}if(0===a.length&&debug)throw new Error("[templateSDK] No templates found to replace. Please make sure you have at least one element with the data-template attribute.")}function deepQuerySelectorAll(e,t=document){const a=[...t.querySelectorAll(e)],l=t=>{for(const l of deepQuerySelectorAll(e,t))a.includes(l)||a.push(l)};t.shadowRoot&&l(t.shadowRoot);for(const e of t.querySelectorAll("*"))e.shadowRoot&&l(e.shadowRoot);return a}onStateChange((e=>{replaceTemplates(e)})),replaceTemplates(null);
